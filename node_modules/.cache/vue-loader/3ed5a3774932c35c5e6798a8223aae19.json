{"remainingRequest":"/home/runner/work/U2_Pensamiento_Algoritmico/U2_Pensamiento_Algoritmico/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/runner/work/U2_Pensamiento_Algoritmico/U2_Pensamiento_Algoritmico/src/components/plantilla/BarraAvance.vue?vue&type=style&index=0&lang=sass&","dependencies":[{"path":"/home/runner/work/U2_Pensamiento_Algoritmico/U2_Pensamiento_Algoritmico/src/components/plantilla/BarraAvance.vue","mtime":1751421072076},{"path":"/home/runner/work/U2_Pensamiento_Algoritmico/U2_Pensamiento_Algoritmico/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/U2_Pensamiento_Algoritmico/U2_Pensamiento_Algoritmico/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/runner/work/U2_Pensamiento_Algoritmico/U2_Pensamiento_Algoritmico/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/runner/work/U2_Pensamiento_Algoritmico/U2_Pensamiento_Algoritmico/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/U2_Pensamiento_Algoritmico/U2_Pensamiento_Algoritmico/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/U2_Pensamiento_Algoritmico/U2_Pensamiento_Algoritmico/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5iYXJyYS1hdmFuY2UKICBkaXNwbGF5OiBmbGV4CiAgYWxpZ24taXRlbXM6IGNlbnRlcgogIGp1c3RpZnktY29udGVudDogZmxleC1lbmQKICBwb3NpdGlvbjogZml4ZWQKICBib3R0b206IDAKICBsZWZ0OiAwCiAgd2lkdGg6IDEwMCUKICBiYWNrZ3JvdW5kLWNvbG9yOiAkd2hpdGUKICBib3JkZXI6IDFweCBzb2xpZCAjRTRFN0VDCiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuNXMgZWFzZS1pbi1vdXQKICB6LWluZGV4OiAxMDAwMDAKCiAgJl9fYmFycmEKICAgIG1hcmdpbjogMCAyMHB4CiAgICBmbGV4OiAxCiAgICBwb3NpdGlvbjogcmVsYXRpdmUKICAgIG1heC13aWR0aDogODAwcHgKCiAgICAmLS1ibGFuY2EsICYtLWFtYXJpbGxhCiAgICAgIGhlaWdodDogNHB4CgogICAgICAmOmJlZm9yZSwgJjphZnRlcgogICAgICAgIGNvbnRlbnQ6ICcnCiAgICAgICAgZGlzcGxheTogYmxvY2sKICAgICAgICB3aWR0aDogMTBweAogICAgICAgIGhlaWdodDogMTBweAogICAgICAgIGJvcmRlci1yYWRpdXM6IDUwJQogICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZQogICAgICAgIHRvcDogNTAlCgogICAgICAmOmJlZm9yZQogICAgICAgIGxlZnQ6IDAKICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLC01MCUpCgogICAgICAmOmFmdGVyCiAgICAgICAgcmlnaHQ6IDAKICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSg1MCUsLTUwJSkKCiAgICAmLS1ibGFuY2EKICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHdoaXRlCiAgICAgICY6YmVmb3JlLCAmOmFmdGVyCiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHdoaXRlCgogICAgJi0tYW1hcmlsbGEKICAgICAgcG9zaXRpb246IGFic29sdXRlCiAgICAgIHdpZHRoOiAxMDAlCiAgICAgIHRvcDogMAogICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkY29sb3ItYWNlbnRvLWJvdG9uZXMKICAgICAgJjpiZWZvcmUsICY6YWZ0ZXIKICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkY29sb3ItYWNlbnRvLWJvdG9uZXMKCiAgJl9fYm90b24KICAgICYtLXJlZ3Jlc2FyLCAmLS1zaWd1aWVudGUKICAgICAgY29sb3I6ICRjb2xvci1zaXN0ZW1hLXRleHRvCiAgICAgIHBhZGRpbmc6IDE2cHggMjJweAogICAgICBib3JkZXItbGVmdDogMXB4IHNvbGlkICNFNEU3RUMKCiAgICAgIC5jb250ZW50CiAgICAgICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuMnMgZWFzZS1pbi1vdXQKICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMCUpCgogICAgJi0tcmVncmVzYXI6aG92ZXIgLmNvbnRlbnQKICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC02JSkKICAgICYtLXNpZ3VpZW50ZTpob3ZlciAuY29udGVudAogICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoNiUpCgogICAgJi0tZGlzYWJsZQogICAgICBwb2ludGVyLWV2ZW50czogbm9uZQogICAgICBjb2xvcjogI2FkYjViZCAhaW1wb3J0YW50CiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNlOWVjZWYKICAgICAgb3BhY2l0eTogMC42NQoKICAmLS1vcGVuCiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCkKCiAgJi0tY2xvc2UKICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgxMDAlKQo="},{"version":3,"sources":["BarraAvance.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4TA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA","file":"BarraAvance.vue","sourceRoot":"src/components/plantilla","sourcesContent":["<template lang=\"pug\">\n.barra-avance(:class=\"[showBarra ? 'barra-avance--open' : 'barra-avance--close']\")\n\n  span.me-auto.ps-2.ms-1.fw-bold {{ `${menuData[0].unidad}` }}\n\n  router-link.barra-avance__boton--regresar(\n    :class=\"[!controlLinks.back.name && 'barra-avance__boton--disable']\"\n    :to=\"{name: controlLinks.back.name, hash: controlLinks.back.hash ? `#${controlLinks.back.hash}` : ''}\"\n  )\n    div.content\n      i.me-3(class=\"fas fa-arrow-left\")\n      span Regresar\n  \n  //- .barra-avance__barra\n  //-   .barra-avance__barra--blanca\n  //-   .barra-avance__barra--amarilla\n\n  router-link.barra-avance__boton--siguiente(\n    :class=\"[!controlLinks.next.name && 'barra-avance__boton--disable']\"\n    :to=\"{name: controlLinks.next.name, hash: controlLinks.next.hash ? `#${controlLinks.next.hash}` : ''}\"\n  )\n    div.content\n      span.me-3 Siguiente\n      i(class=\"fas fa-arrow-right\")\n\n</template>\n\n<script>\nexport default {\n  name: 'BarraAvance',\n  data: () => ({\n    cursoSelection: null,\n    idSelecctionArr: [],\n  }),\n  computed: {\n    menuData() {\n      return this.$config.menuPrincipal.menu\n    },\n    showBarra() {\n      const enIntro = this.$route.fullPath.includes('/introduccion')\n      const enCurso = this.$route.fullPath.includes('/curso')\n      const haveControls =\n        (this.controlLinks.next && this.controlLinks.next.name) ||\n        (this.controlLinks.back && this.controlLinks.back.name)\n      return !this.menuOpen && (enIntro || enCurso) && haveControls\n    },\n    // controlLinks() {\n    //   const menuObject = this.menuData.find(\n    //     item => item.nombreRuta === this.$route.name,\n    //   )\n    //   if (this.$route.name === 'introduccion') {\n    //     // SI ESTOY EN INTRODUCCION\n    //     const tema1 = this.menuData.find(item => item.nombreRuta === 'tema1')\n    //     return {\n    //       next: {\n    //         name: tema1.nombreRuta,\n    //         hash: '',\n    //       },\n    //       back: {\n    //         name: '',\n    //         hash: '',\n    //       },\n    //     }\n    //   } else if (!menuObject) {\n    //     // SI NO ESTOY EN UN TEMA O SI NO HAY SUBTEMAS --ERROR FALLBACK\n    //     return {\n    //       next: {\n    //         name: '',\n    //         hash: '',\n    //       },\n    //       back: {\n    //         name: '',\n    //         hash: '',\n    //       },\n    //     }\n    //   } else {\n    //     // SI ESTOY EN UN TEMA\n\n    //     let routeObj = {}\n    //     const idxOfMenuItem = this.menuData\n    //       .map(item => item.nombreRuta)\n    //       .indexOf(this.$route.name)\n\n    //     if (menuObject.subMenu) {\n    //       // MENU ITEM TIENE SUBMENU\n    //       const idxCurrentHash = menuObject.subMenu\n    //         .map(item => item.hash)\n    //         .indexOf(this.$route.hash.replace('#', ''))\n\n    //       // back logic\n    //       if (idxCurrentHash <= 0) {\n    //         // SI NO HAY SELECCIONADO UN HASH O ESTA SELECCIONADO EL PRIMERO\n    //         const backMenuItem = this.menuData[idxOfMenuItem - 1]\n\n    //         const backIsTheme =\n    //           backMenuItem && backMenuItem.nombreRuta.includes('tema')\n    //         const backIsIntro =\n    //           backMenuItem && backMenuItem.nombreRuta.includes('introduccion')\n\n    //         if (backIsTheme || backIsIntro) {\n    //           // si el anterior objeto es un tema o introduccion\n    //           routeObj.back = {\n    //             name: backMenuItem.nombreRuta,\n    //             hash: '',\n    //           }\n    //         } else {\n    //           // si el objeto anterior no es tema o introduccion\n    //           routeObj.back = {\n    //             name: '',\n    //             hash: '',\n    //           }\n    //         }\n    //       } else if (idxCurrentHash === menuObject.subMenu.length - 1) {\n    //         // SI EL ULTIMO HASH ESTA SELECCIONADO\n    //         const backHash = menuObject.subMenu[idxCurrentHash - 1].hash\n\n    //         routeObj.back = {\n    //           name: this.$route.name,\n    //           hash: backHash,\n    //         }\n    //       } else {\n    //         // SI ESTOY ENMEDIO DE LOS HASH\n    //         routeObj.back = {\n    //           name: this.$route.name,\n    //           hash: menuObject.subMenu[idxCurrentHash - 1].hash,\n    //         }\n    //       }\n\n    //       // Next Logic\n    //       if (idxCurrentHash === menuObject.subMenu.length - 1) {\n    //         // es el ultimo hash seleccionado\n    //         const nextMenuItem = this.menuData[idxOfMenuItem + 1]\n\n    //         const nextIsTheme =\n    //           nextMenuItem && nextMenuItem.nombreRuta.includes('tema')\n\n    //         if (nextIsTheme) {\n    //           // el siguiente objeto del menu es tema\n    //           routeObj.next = {\n    //             name: nextMenuItem.nombreRuta,\n    //             hash: '',\n    //           }\n    //         } else {\n    //           // si es el ultimo tema\n    //           routeObj.next = {\n    //             name: '',\n    //             hash: '',\n    //           }\n    //         }\n    //       } else {\n    //         // no estoy en el ultimo hash\n    //         const nextSubMenuItem = menuObject.subMenu[idxCurrentHash + 1]\n    //         const nextHash = nextSubMenuItem.hash\n    //         routeObj.next = {\n    //           name: this.$route.name,\n    //           hash: nextHash,\n    //         }\n    //       }\n    //     } else {\n    //       // MENU ITEM NO TIENE SUBMENU\n\n    //       // Back logic\n    //       const backMenuItem = this.menuData[idxOfMenuItem - 1]\n\n    //       const backIsTheme =\n    //         backMenuItem && backMenuItem.nombreRuta.includes('tema')\n    //       const backIsIntro =\n    //         backMenuItem && backMenuItem.nombreRuta.includes('introduccion')\n\n    //       if (backIsTheme || backIsIntro) {\n    //         // si el anterior objeto es un tema o introduccion\n    //         routeObj.back = {\n    //           name: backMenuItem.nombreRuta,\n    //           hash: '',\n    //         }\n    //       } else {\n    //         // si el objeto anterior no es tema o introduccion\n    //         routeObj.back = {\n    //           name: '',\n    //           hash: '',\n    //         }\n    //       }\n\n    //       // Next logic\n    //       const nextMenuItem = this.menuData[idxOfMenuItem + 1]\n\n    //       const nextIsTheme =\n    //         nextMenuItem && nextMenuItem.nombreRuta.includes('tema')\n\n    //       if (nextIsTheme) {\n    //         // el siguiente objeto del menu es tema\n    //         routeObj.next = {\n    //           name: nextMenuItem.nombreRuta,\n    //           hash: '',\n    //         }\n    //       } else {\n    //         // si es el ultimo tema\n    //         routeObj.next = {\n    //           name: '',\n    //           hash: '',\n    //         }\n    //       }\n    //     }\n    //     return routeObj\n    //   }\n    // },\n    controlLinks() {\n      const menuObject = this.menuData.find(\n        item => item.nombreRuta === this.$route.name,\n      )\n      if (this.$route.name === 'introduccion') {\n        // SI ESTOY EN INTRODUCCION\n        const tema1 = this.menuData.find(item => item.nombreRuta === 'tema1')\n        return {\n          next: {\n            name: tema1.nombreRuta,\n            hash: '',\n          },\n          back: {\n            name: '',\n            hash: '',\n          },\n        }\n      } else if (!menuObject) {\n        // SI NO ESTOY EN UN TEMA O SI NO HAY SUBTEMAS --ERROR FALLBACK\n        return {\n          next: {\n            name: '',\n            hash: '',\n          },\n          back: {\n            name: '',\n            hash: '',\n          },\n        }\n      } else {\n        let routeObj = {}\n        const idxOfMenuItem = this.menuData\n          .map(item => item.nombreRuta)\n          .indexOf(this.$route.name)\n\n        // Back logic\n        const backMenuItem = this.menuData[idxOfMenuItem - 1]\n\n        const backIsTheme =\n          backMenuItem && backMenuItem.nombreRuta.includes('tema')\n        const backIsIntro =\n          backMenuItem && backMenuItem.nombreRuta.includes('introduccion')\n\n        if (backIsTheme || backIsIntro) {\n          // si el anterior objeto es un tema o introduccion\n          routeObj.back = {\n            name: backMenuItem.nombreRuta,\n            hash: '',\n          }\n        } else {\n          // si el objeto anterior no es tema o introduccion\n          routeObj.back = {\n            name: '',\n            hash: '',\n          }\n        }\n\n        // Next logic\n        const nextMenuItem = this.menuData[idxOfMenuItem + 1]\n\n        const nextIsTheme =\n          nextMenuItem && nextMenuItem.nombreRuta.includes('tema')\n\n        if (nextIsTheme) {\n          // el siguiente objeto del menu es tema\n          routeObj.next = {\n            name: nextMenuItem.nombreRuta,\n            hash: '',\n          }\n        } else {\n          // si es el ultimo tema\n          routeObj.next = {\n            name: '',\n            hash: '',\n          }\n        }\n        return routeObj\n      }\n    },\n    menuOpen() {\n      return this.$store.getters.isMenuOpen\n    },\n  },\n  // created() {\n  //   document.addEventListener('scroll', this.trackIds)\n  // },\n  // mounted() {\n  //   this.cursoSelection = document.querySelector('#curso')\n  //   const subMenuSelected = this.menuData.find(\n  //     item => item.nombreRuta === this.$route.name,\n  //   ).subMenu\n  //   this.idSelecctionArr = subMenuSelected\n  //     ? subMenuSelected.map(item => document.querySelector(`#${item.hash}`))\n  //     : []\n  // },\n  // methods: {\n  //   trackIds() {\n  //     if (!this.idSelecctionArr.length) return\n  //     this.idSelecctionArr.forEach(item => {\n  //       console.log(item.scrollTop)\n  //     })\n  //     const mao = document.querySelector('#t_1_5')\n  //     console.log(this.cursoSelection.clientHeight)\n  //     console.log(window.innerHeight, window.scrollY, mao.offsetTop)\n  //   },\n  // },\n}\n</script>\n\n<style lang=\"sass\">\n.barra-avance\n  display: flex\n  align-items: center\n  justify-content: flex-end\n  position: fixed\n  bottom: 0\n  left: 0\n  width: 100%\n  background-color: $white\n  border: 1px solid #E4E7EC\n  transition: transform 0.5s ease-in-out\n  z-index: 100000\n\n  &__barra\n    margin: 0 20px\n    flex: 1\n    position: relative\n    max-width: 800px\n\n    &--blanca, &--amarilla\n      height: 4px\n\n      &:before, &:after\n        content: ''\n        display: block\n        width: 10px\n        height: 10px\n        border-radius: 50%\n        position: absolute\n        top: 50%\n\n      &:before\n        left: 0\n        transform: translate(-50%,-50%)\n\n      &:after\n        right: 0\n        transform: translate(50%,-50%)\n\n    &--blanca\n      background-color: $white\n      &:before, &:after\n        background-color: $white\n\n    &--amarilla\n      position: absolute\n      width: 100%\n      top: 0\n      background-color: $color-acento-botones\n      &:before, &:after\n        background-color: $color-acento-botones\n\n  &__boton\n    &--regresar, &--siguiente\n      color: $color-sistema-texto\n      padding: 16px 22px\n      border-left: 1px solid #E4E7EC\n\n      .content\n        transition: transform 0.2s ease-in-out\n        transform: translateX(0%)\n\n    &--regresar:hover .content\n      transform: translateX(-6%)\n    &--siguiente:hover .content\n      transform: translateX(6%)\n\n    &--disable\n      pointer-events: none\n      color: #adb5bd !important\n      background-color: #e9ecef\n      opacity: 0.65\n\n  &--open\n    transform: translateY(0)\n\n  &--close\n    transform: translateY(100%)\n</style>\n"]}]}